class Solution {
public:
    int countOccurrences(const vector<int>& arr, int target) {
        int n = arr.size();
        int first_occurrence_idx = -1;
        int low = 0;
        int high = n - 1;
       while (low <= high) {
            int mid = low + (high - low) / 2;
            if (arr[mid] == target) {
                first_occurrence_idx = mid;
                high = mid - 1;
            } else if (arr[mid] > target) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        if (first_occurrence_idx == -1) {
            return 0;
        }
        int last_occurrence_idx = -1;
        low = 0;
        high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (arr[mid] == target) {
                last_occurrence_idx = mid;
                low = mid + 1;
            } else if (arr[mid] > target) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }   
        return last_occurrence_idx - first_occurrence_idx + 1;       
    }
};
