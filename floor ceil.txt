class Solution {
public:
    vector<int> getFloorAndCeil(vector<int> nums, int x) {
        int n = nums.size();
        int floor_ans = -1;
        int ceil_ans = -1;
        int low = 0;
        int high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] <= x) {
                floor_ans = nums[mid]; 
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        low = 0;
        high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums[mid] >= x) {
                ceil_ans = nums[mid]; 
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }  
        return {floor_ans, ceil_ans};
    } 
};



